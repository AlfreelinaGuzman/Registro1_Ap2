@page "/Prestamos"

@using BLL
@using Models
@inject IToastService Toast

<EditForm Model="Prestamos" OnValidSubmit="Guardar">
    <DataAnnotationsValidator />
    <div class= "card">
        <div class="card-header">
            <h3>Registro de Prestamos</h3>
        </div> 
        <div class="card-body">

            @*——————————————————————————————————————————————[ persona ID ]——————————————————————————————————————————————*@
            <div class="form-row align-items-center">
                <div class="col">
                    <div class="form-group">
                        <label>PrestamoId</label>
                        <div class="input-group">
                            <InputNumber @bind-Value="Prestamos.PrestamoId" class="form-control col-2" min="0" height="8" widht="2" />

                            @*——————————————————————————————————————————————[ BUSCAR ]——————————————————————————————————————————————*@
                            <div class="input-group-append">
                                <button type="button" class="btn btn-primary input-group-text" height="8" widht="2" @onclick="Buscar">Buscar</button>
                            </div>
                       
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                    <InputSelect @bind-Value="PersonaIndex" class="custom-select form-control" id="PersonaIdSelectGrid">
                         <option value="0">Elija una persona...</option>
                            @if (personas != null)
                                {
                                    @foreach (var Persona in personas)
                                {
                                   <option value="@Persona.PersonaId">@Persona.Nombres</option>
                                }}
                    </InputSelect>
            </div>

            @*——————————————————————————————————————————————[ Concepto ]——————————————————————————————————————————————*@
            <div class="form-group">
                <label>Concepto</label>
                <InputText @bind-Value="Prestamos.Concepto" height="8,2" widht="2" class="form-control col-4" />
                <ValidationMessage For="@(() => Prestamos.Concepto)" />
            </div>
            @*——————————————————————————————————————————————[ Monto ]——————————————————————————————————————————————*@
            <div class="form-group">
                <label>Monto</label>
                <InputNumber @bind-Value="Prestamos.Monto" height="8" widht="2" class="form-control col-4" />
                <ValidationMessage For="@(() => Prestamos.Monto)" />
                @if (Prestamos.Monto!=changedMonto)
                {
                    MontoChanged();
                }
            </div>

            @*——————————————————————————————————————————————[ Balance ]——————————————————————————————————————————————*@
            <div class="form-group">
                <label>Balance</label>
                <InputNumber @bind-Value="Prestamos.Balance" height="8" widht="2" class="form-control col-4" />
                <ValidationMessage For="@(() => Prestamos.Balance)" />
            </div>

        

            @*——————————————————————————————————————————————[ Fecha  ]——————————————————————————————————————————————*@
            <div class="form-group">
                <label>Fecha</label>
                <InputDate @bind-Value="Prestamos.Fecha" height="8" widht="2" class="form-control col-4" />
                <ValidationMessage For="@(() => Prestamos.Fecha)" />
            </div>

            @*——————————————————————————————————————————————[ NUEVO / GUARDAR / ELIMINAR ]——————————————————————————————————————————————*@
            <div class="card-footer">
                <div class="form-group" display: inline-block>
                    <button type="button" class="btn btn-lg btn-primary" @onclick="Nuevo">Nuevo</button>
                    <button type="submit" class="btn btn-lg btn-success" style="margin-inline-start: 20px;">Guardar</button>
                    <button type="button" class="btn btn-lg btn-danger" @onclick="Eliminar" style="margin-inline-start: 20px;">Eliminar</button>
                </div>
            </div>
        </div>
    </div>
</EditForm>

@*——————————————————————————————————————————————[ CODIGO ]——————————————————————————————————————————————*@
@code
{
     [Parameter]
        
        public decimal changedMonto {get; set;}
        public int PersonaIndex { get; set; }
        public int PersonaId { get; set; }

        private Prestamos Prestamos = new Prestamos();
    	List <Personas> personas =new List <Personas>();

            protected override void OnInitialized()
            {
                Nuevo();
                personas = PersonasBLL.GetList(V => true);
            }

            public void MontoChanged ()
            {
                Prestamos.Balance = Prestamos.Monto;

            }

    @*——————————————————————————————————————————————[NUEVO]——————————————————————————————————————————————*@
        public void Nuevo()
            {
                Prestamos = new Prestamos();
                PersonaIndex = 0;
            }

    @*——————————————————————————————————————————————[BUSCAR]——————————————————————————————————————————————*@
        private void Buscar()
            {
                if (Prestamos.PrestamoId > 0)
                {
                    var encontrado = PrestamosBLL.Buscar(Prestamos.PrestamoId);

                    if (encontrado != null)
                        this.Prestamos = encontrado;
                    else
                        Toast.ShowWarning("Esta Id no pudo ser encontrada.");
                    return;
                }
            }

    @*——————————————————————————————————————————————[ GUARDAR ]——————————————————————————————————————————————*@
        public void Guardar()
        {
            bool guardado;
            Prestamos.PersonaId = PersonaIndex;            

            guardado = PrestamosBLL.Guardar(Prestamos);

            if (guardado)
            {
                Nuevo();
                Toast.ShowSuccess("Registro Guardado exitosamente.");
            }
            else
                Toast.ShowError("No fue posible Guardar este Registro.");
            return;
        }

    @*——————————————————————————————————————————————[ ELIMINAR ]——————————————————————————————————————————————*@
        public void Eliminar()
        {
            bool eliminado;

            eliminado = PrestamosBLL.Eliminar(Prestamos.PrestamoId);

            if (eliminado)
            {
                Nuevo();
                Toast.ShowSuccess("Registro Eliminado exitosamente.");
            }
            else
                Toast.ShowError("No fue posible Eliminar este Registro.");
            return;
        }
}